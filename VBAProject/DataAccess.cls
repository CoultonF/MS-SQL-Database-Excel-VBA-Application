VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "DataAccess"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Private conn As Object
Private recordset As Object
Private Cmd As Object
Private pm As Object

Public Testing_Conn As String

Private f As SysFunc



'===================================================================================||
'                                                                                   ||
'                                                                                   ||
'                                RUN SQL QUERY                                      ||
'                                                                                   ||
'                                                                                   ||
'   value is the searching value                                                    ||
'                                                                                   ||
'   id must be unique for each value                                                ||
'                                                                                   ||
'   example use:                                                                    ||
'                                                                                   ||
'   Dim dataObj as New DataAccess                                                   ||
'                                                                                   ||
'   Dim results as Variant                                                          ||
'                                                                                   ||
'   results = dataObj.runQuery("SELECT * FROM TABLE WHERE X = ?", Array("X_VALUE")) ||
'                                                                                   ||
'                                                                                   ||
'===================================================================================||
Function runQuery(sql As String, Optional value As Variant) As Variant
    'On Error GoTo noDbConn
    Dim recordset As Object
    Dim hasAccess As Boolean
    Call init
    If f.IsArrayAllocated(value) Then
        Dim list As Variant
        Dim pm As Object
        Debug.Print "Database Connection State: " + CStr(conn.State)
        Debug.Print "Query to execute: " + sql
        Dim sentinal As Integer: sentinal = 0
retry:
        If conn.State <> 1 Or sentinal > 2 Then
            sentinal = sentinal + 1
            GoTo retry
        ElseIf sentinal > 2 Then
        Debug.Print "Error # " & str(Err.Number) & " was generated by " _
         & Err.Source & Chr(13) & "Error Line: " & Erl & Chr(13) & Err.Description
        MsgBox "You do not have access to the database. See documentation for how to request access."
        End
        
        End If
        Set Cmd.ActiveConnection = conn
        Cmd.CommandType = 1   '1 is adCmdText equivalent value
        Cmd.CommandText = sql
        Cmd.Prepared = True
        
        
        Dim i As Integer
        'nullCount -> the number of times a null has been added to the param query string to ensure null is properly replaced.
        Dim nullCount As Long: nullCount = 0
        For i = 0 To UBound(value, 1)
            If value(i) = "" Or value(i) = "NULL" Then
            sql = f.ReplaceN(sql, "?", "Null", i + 1 - nullCount)
            Cmd.CommandText = sql
            nullCount = nullCount + 1
            ElseIf IsDate(value(i)) Then
            Set pm = Cmd.CreateParameter("@Parameter" & i + 1, 7, 1, 100000, value(i))     '7 is adDate equivalent value       --  1 is adParamInput equivalent value
            Cmd.Parameters.Append pm
            ElseIf TypeName(value(i)) = "String" Then
            Dim stringp As String: stringp = CStr(value(i))
            Set pm = Cmd.CreateParameter("@Parameter" & i + 1, 200, 1, 100000, stringp)    '200 is adVarChar equivalent value  --  1 is adParamInput equivalent value
            Cmd.Parameters.Append pm
            Else
            Set pm = Cmd.CreateParameter("@Parameter" & i + 1, 3, 1, 100000, value(i))     '3 is adInteger equivalent value    --  1 is adParamInput equivalent value
            Cmd.Parameters.Append pm
            End If
        Next i
        
        
        Set recordset = CreateObject("ADODB.recordset")
        'Set recordset = Cmd.Execute()
        On Error GoTo noaccess
        recordset.Open Cmd
        
        hasAccess = True
noaccess:
        If Not hasAccess Then
            Debug.Print "Error # " & str(Err.Number) & " was generated by " _
         & Err.Source & Chr(13) & "Error Line: " & Erl & Chr(13) & Err.Description
            MsgBox Err.Description
            End
        End If
    Else
        Set recordset = CreateObject("ADODB.recordset")
        Debug.Print "Database Connection State: " + CStr(conn.State)
        Debug.Print "Query to execute: " + sql
        On Error GoTo noaccessRS
        recordset.Open sql, conn, 2, 3, 1       '1 is adOpenStatic equivalent value -- 1 is adLockReadOnly equivalent value
        
        hasAccess = True
noaccessRS:
        If Not hasAccess Then
            MsgBox "Database connection state: " & CStr(conn.State) & vbNewLine & "Failed Query: " & vbNewLine & sql
            End
        End If
    End If
    Dim noError As Boolean: noError = True
    list = 0
    If recordset.State Then
        If (recordset.EOF = False And recordset.BOF = False) Then
            'recordset.MoveFirst
            Dim t As Single
                't = Timer
            list = recordset.getRows
                'MsgBox Timer - t
        Else
        
            list = Array()
        End If
        
        recordset.Close
        
    End If
    runQuery = list
    
    Set recordset = Nothing
    
noDbConn:
    If Not noError Then
        MsgBox "No Database Access."
    End If
End Function





'==========================================================

'||                 CREATE CONNECTION                    ||

'==========================================================
Function init()

    On Error Resume Next
    Testing_Conn = f.getComputer & "\SQLEXPRESS"
    Set conn = CreateObject("ADODB.Connection")
    Set recordset = CreateObject("ADODB.recordset")
    Set Cmd = CreateObject("ADODB.Command")
    Set pm = Nothing
    Set pm = CreateObject("ADODB.Parameter")
    conn.ConnectionString = "Provider='SQLOLEDB'; Integrated Security='SSPI'; Data Source='" & Testing_Conn & "'; Initial Catalog='Local_DB';"
    conn.Open

End Function

Private Sub Class_Initialize()

    Set f = New SysFunc
    Call init

End Sub
